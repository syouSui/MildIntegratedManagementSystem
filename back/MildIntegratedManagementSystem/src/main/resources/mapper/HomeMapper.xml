<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syousui.mildintegratedmanagesystem.mapper.HomeMapper">
  <resultMap id="BaseResultMap" type="com.syousui.mildintegratedmanagesystem.pojo.po.Home">
    <id column="home_id" jdbcType="INTEGER" property="homeId"/>
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="price" jdbcType="DOUBLE" property="price"/>
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
    <result column="home_type_id" jdbcType="INTEGER" property="homeTypeId"/>
  </resultMap>
  <sql id="Base_Column_List">
    home_id, title, price, updated_time, home_type_id
  </sql>
  <insert id="insertSelective" parameterType="com.syousui.mildintegratedmanagesystem.pojo.po.Home">
    insert into home
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="homeId != null">
        home_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="homeTypeId != null">
        home_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="homeId != null">
        #{homeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="homeTypeId != null">
        #{homeTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from home
    where home_id = #{homeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.syousui.mildintegratedmanagesystem.pojo.po.Home">
    insert into home (home_id, title, price, 
      updated_time, home_type_id)
    values (#{homeId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{homeTypeId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.syousui.mildintegratedmanagesystem.pojo.po.Home">
    update home
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="homeTypeId != null">
        home_type_id = #{homeTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where home_id = #{homeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.syousui.mildintegratedmanagesystem.pojo.po.Home">
    update home
    set title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      home_type_id = #{homeTypeId,jdbcType=INTEGER}
    where home_id = #{homeId,jdbcType=INTEGER}
  </update>
  <select id="selectSelective" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from home
    <where> <!-- 在此处只处理null, 像0, 0.0, '', ""等则需要在 服务层处理为 null 传递过来 -->
      <if test="homeId != null">
        and home_id = #{homeId}
      </if>
      <if test="title != null">
        <bind name="handledTitle" value="'%'+title+'%'"/> <!-- 坑! 若title 为 null, bind标签也会绑定! 一直报错!!! -->
        and title like #{handledTitle}
      </if>
      <if test="priceFrom != null and priceTo != null">
        and price between #{priceFrom} and #{priceTo}
      </if>
      <if test="dateFrom != null and dateTo != null">
        and updated_time between #{dateFrom} and #{dateTo}
      </if>
      <if test="homeTypeIdList != null">
        and home_type_id in
        <foreach index="i" item="e" collection="homeTypeIdList" separator="," open="(" close=")">
          #{e, jdbcType=INTEGER}
        </foreach>
      </if>
    </where>
  </select>
  <!--  <select id="selectAll" resultMap="BaseResultMap">-->
  <!--    select-->
  <!--    <include refid="Base_Column_List"/>-->
  <!--    from home-->
  <!--  </select>-->
  <!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
  <!--    select-->
  <!--    <include refid="Base_Column_List"/>-->
  <!--    from home-->
  <!--    where home_id = #{homeId,jdbcType=INTEGER}-->
  <!--  </select>-->
  <!--  <select id="selectByLikeTitle" parameterType="java.lang.String" resultMap="BaseResultMap">-->
  <!--    <bind name="handledTitle" value="'%'+title+'%'"/>-->
  <!--    select-->
  <!--    <include refid="Base_Column_List"/>-->
  <!--    from home-->
  <!--    where title like #{handledTitle}-->
  <!--  </select>-->
  <!--  <select id="selectByPriceRange" parameterType="java.lang.Double" resultMap="BaseResultMap">-->
  <!--    select-->
  <!--    <include refid="Base_Column_List"/>-->
  <!--    from home-->
  <!--    where price between #{from} and #{to}-->
  <!--  </select>-->
  <!--  <select id="selectByDateRange" parameterType="java.util.Date" resultMap="BaseResultMap">-->
  <!--    select-->
  <!--    <include refid="Base_Column_List"/>-->
  <!--    from home-->
  <!--    where updated_time between #{from} and #{to}-->
  <!--  </select>-->
  <!--  <select id="selectByHomeTypeId" parameterType="java.util.List" resultMap="BaseResultMap">-->
  <!--    select-->
  <!--    <include refid="Base_Column_List"/>-->
  <!--    from home-->
  <!--    where 1=1 and-->
  <!--    home_type_id in-->
  <!--    <foreach index="i" item="e" collection="list" separator="," open="(" close=")">-->
  <!--      #{e, jdbcType=INTEGER}-->
  <!--    </foreach>-->
  <!--  </select>-->
</mapper>